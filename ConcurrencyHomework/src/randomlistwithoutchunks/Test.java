package randomlistwithoutchunks;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import javax.swing.JOptionPane;

import randomlistwithoutchunks.ListThread;

public class Test {

	public static boolean isPrime(int number){
		for (int i = 2; i <= number/2; i++)
            if (number % i == 0)
                return false;

        return true;
	}
	
	public static void main(String[] args) {
		Random randomGenerator = new Random();
		List<Integer> randomList = new ArrayList<>();
		
		//This is the correct list of prime numbers
		List<Integer> correctPrimeList = new ArrayList<>();
		
		//This is the list of prime numbers generated by the threads
		List<Integer> primeList = new ArrayList<>();
		
		for(int i=0; i<100; i++){
			randomList.add(i);
			if(isPrime(i)){
				correctPrimeList.add(i);
			}
		}
		
		List<Thread> threadList = new ArrayList<>();
		
		int numberOfThreads = Integer.parseInt(JOptionPane.showInputDialog("Give the number of threads"));
		System.out.println("Number of threads "+numberOfThreads);
		
		
		long startMillis = System.currentTimeMillis();
		
		for(int i=0; i<numberOfThreads; i++){

			Thread threadToBeAdded = new Thread(new ListThread(randomList, primeList));
			System.out.println("Thread "+ListThread.currentID+" starts");
			threadList.add(threadToBeAdded);
			threadToBeAdded.start();
		}
		
		//In order to check the result, I need to wait for all the threads to finish their task
		 for (Thread thread : threadList){
	            try {
	                thread.join();
	            } catch (InterruptedException e) {
	                e.printStackTrace();
	            }
		 }
		 
		 long endMillis = System.currentTimeMillis();
		 
		 System.out.println("Elapsed time "+(endMillis - startMillis));
		 
		 System.out.println("Prime number list "+primeList);
		 
		 System.out.println("The result is "+(primeList.size()==correctPrimeList.size() && primeList.containsAll(correctPrimeList)));
	}
}
